trigger:
- main

resources:
- repo: self

variables:
  imagerepo: testdockrepo
  tag: '$(Build.BuildID)'

stages:
- stage: Build
  displayName: Build Image
  jobs:
    - job: Build
      displayName: Build
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'testdockerecr_svc_connection'
          repository: '$(imagerepo)'
          command: 'buildAndPush'
          Dockerfile: '$(Build.SourceDirectory)/app/Dockerfile'
          addPipelineData: false
          addBaseImageData: false
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Pipeline.Workspace)/s/kubernates/'
          artifact: 'manifests'
          publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
   acrurl: 'testdockercr.azurecr.io'
   secret: 'acrsecret'
  jobs:
    - job: Deploy
      displayName: Deploy on AKS
      pool: 
        vmImage: Ubuntu-latest
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          itemPattern: 
          targetPath: '$(Pipeline.Workspace)/manifests'
      - task: KubernetesManifest@1
        inputs:
          action: 'createSecret'
          connectionType: 'kubernetesServiceConnection'
          kubernetesServiceConnection: 'AKS_svc_connection'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: 'acrsecret'
          dockerRegistryEndpoint: 'testdockerecr_svc_connection'
      - task: KubernetesManifest@1
        inputs:
          action: 'deploy'
          connectionType: 'kubernetesServiceConnection'
          kubernetesServiceConnection: 'AKS_svc_connection'
          namespace: 'default'
          manifests: |
            $(Pipeline.Workspace)/manifests/deployment.yml
            $(Pipeline.Workspace)/manifests/service.yml
          containers: '$(acrurl)/$(testdockrepo):$(tag)'
          imagePullSecrets: '$(secret)'
